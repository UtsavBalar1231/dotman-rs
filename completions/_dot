#compdef dot

autoload -U is-at-least

_dot() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-v[]' \
'--verbose[]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_dot_commands" \
"*::: :->dot" \
&& ret=0
    case $state in
    (dot)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:dot-command-$line[1]:"
        case $line[1] in
            (add)
_arguments "${_arguments_options[@]}" : \
'-f[]' \
'--force[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
'*::paths -- Paths to add:_default' \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" : \
'-s[]' \
'--short[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(commit)
_arguments "${_arguments_options[@]}" : \
'-m+[]:MESSAGE:_default' \
'--message=[]:MESSAGE:_default' \
'-a[]' \
'--all[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(checkout)
_arguments "${_arguments_options[@]}" : \
'-f[]' \
'--force[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
':target -- Branch or commit to checkout:_default' \
&& ret=0
;;
(reset)
_arguments "${_arguments_options[@]}" : \
'--hard[]' \
'--soft[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
'::commit -- Commit to reset to:_default' \
&& ret=0
;;
(push)
_arguments "${_arguments_options[@]}" : \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
'::remote -- Remote name:_default' \
'::branch -- Branch to push:_default' \
&& ret=0
;;
(pull)
_arguments "${_arguments_options[@]}" : \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
'::remote -- Remote name:_default' \
'::branch -- Branch to pull:_default' \
&& ret=0
;;
(init)
_arguments "${_arguments_options[@]}" : \
'-b[]' \
'--bare[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" : \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
':object -- Object to show:_default' \
&& ret=0
;;
(log)
_arguments "${_arguments_options[@]}" : \
'-n+[]:LIMIT:_default' \
'--limit=[]:LIMIT:_default' \
'--oneline[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(diff)
_arguments "${_arguments_options[@]}" : \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
'::from -- First commit:_default' \
'::to -- Second commit:_default' \
&& ret=0
;;
(rm)
_arguments "${_arguments_options[@]}" : \
'-c[]' \
'--cached[]' \
'-f[]' \
'--force[]' \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
'*::paths -- Paths to remove:_default' \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
'-v[]' \
'--verbose[]' \
'-h[Print help]' \
'--help[Print help]' \
':shell -- Shell to generate completions for:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_dot__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:dot-help-command-$line[1]:"
        case $line[1] in
            (add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(commit)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(checkout)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(reset)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(push)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(pull)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(init)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(show)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(log)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(diff)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rm)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_dot_commands] )) ||
_dot_commands() {
    local commands; commands=(
'add:Add files to be tracked' \
'status:Show the working tree status' \
'commit:Record changes to the repository' \
'checkout:Switch branches or restore working tree files' \
'reset:Reset current HEAD to the specified state' \
'push:Update remote refs along with associated objects' \
'pull:Fetch from and integrate with another repository' \
'init:Initialize a new dotman repository' \
'show:Show various types of objects' \
'log:Show commit logs' \
'diff:Show changes between commits' \
'rm:Remove files from tracking' \
'completion:Generate shell completion scripts' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'dot commands' commands "$@"
}
(( $+functions[_dot__add_commands] )) ||
_dot__add_commands() {
    local commands; commands=()
    _describe -t commands 'dot add commands' commands "$@"
}
(( $+functions[_dot__checkout_commands] )) ||
_dot__checkout_commands() {
    local commands; commands=()
    _describe -t commands 'dot checkout commands' commands "$@"
}
(( $+functions[_dot__commit_commands] )) ||
_dot__commit_commands() {
    local commands; commands=()
    _describe -t commands 'dot commit commands' commands "$@"
}
(( $+functions[_dot__completion_commands] )) ||
_dot__completion_commands() {
    local commands; commands=()
    _describe -t commands 'dot completion commands' commands "$@"
}
(( $+functions[_dot__diff_commands] )) ||
_dot__diff_commands() {
    local commands; commands=()
    _describe -t commands 'dot diff commands' commands "$@"
}
(( $+functions[_dot__help_commands] )) ||
_dot__help_commands() {
    local commands; commands=(
'add:Add files to be tracked' \
'status:Show the working tree status' \
'commit:Record changes to the repository' \
'checkout:Switch branches or restore working tree files' \
'reset:Reset current HEAD to the specified state' \
'push:Update remote refs along with associated objects' \
'pull:Fetch from and integrate with another repository' \
'init:Initialize a new dotman repository' \
'show:Show various types of objects' \
'log:Show commit logs' \
'diff:Show changes between commits' \
'rm:Remove files from tracking' \
'completion:Generate shell completion scripts' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'dot help commands' commands "$@"
}
(( $+functions[_dot__help__add_commands] )) ||
_dot__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'dot help add commands' commands "$@"
}
(( $+functions[_dot__help__checkout_commands] )) ||
_dot__help__checkout_commands() {
    local commands; commands=()
    _describe -t commands 'dot help checkout commands' commands "$@"
}
(( $+functions[_dot__help__commit_commands] )) ||
_dot__help__commit_commands() {
    local commands; commands=()
    _describe -t commands 'dot help commit commands' commands "$@"
}
(( $+functions[_dot__help__completion_commands] )) ||
_dot__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'dot help completion commands' commands "$@"
}
(( $+functions[_dot__help__diff_commands] )) ||
_dot__help__diff_commands() {
    local commands; commands=()
    _describe -t commands 'dot help diff commands' commands "$@"
}
(( $+functions[_dot__help__help_commands] )) ||
_dot__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'dot help help commands' commands "$@"
}
(( $+functions[_dot__help__init_commands] )) ||
_dot__help__init_commands() {
    local commands; commands=()
    _describe -t commands 'dot help init commands' commands "$@"
}
(( $+functions[_dot__help__log_commands] )) ||
_dot__help__log_commands() {
    local commands; commands=()
    _describe -t commands 'dot help log commands' commands "$@"
}
(( $+functions[_dot__help__pull_commands] )) ||
_dot__help__pull_commands() {
    local commands; commands=()
    _describe -t commands 'dot help pull commands' commands "$@"
}
(( $+functions[_dot__help__push_commands] )) ||
_dot__help__push_commands() {
    local commands; commands=()
    _describe -t commands 'dot help push commands' commands "$@"
}
(( $+functions[_dot__help__reset_commands] )) ||
_dot__help__reset_commands() {
    local commands; commands=()
    _describe -t commands 'dot help reset commands' commands "$@"
}
(( $+functions[_dot__help__rm_commands] )) ||
_dot__help__rm_commands() {
    local commands; commands=()
    _describe -t commands 'dot help rm commands' commands "$@"
}
(( $+functions[_dot__help__show_commands] )) ||
_dot__help__show_commands() {
    local commands; commands=()
    _describe -t commands 'dot help show commands' commands "$@"
}
(( $+functions[_dot__help__status_commands] )) ||
_dot__help__status_commands() {
    local commands; commands=()
    _describe -t commands 'dot help status commands' commands "$@"
}
(( $+functions[_dot__init_commands] )) ||
_dot__init_commands() {
    local commands; commands=()
    _describe -t commands 'dot init commands' commands "$@"
}
(( $+functions[_dot__log_commands] )) ||
_dot__log_commands() {
    local commands; commands=()
    _describe -t commands 'dot log commands' commands "$@"
}
(( $+functions[_dot__pull_commands] )) ||
_dot__pull_commands() {
    local commands; commands=()
    _describe -t commands 'dot pull commands' commands "$@"
}
(( $+functions[_dot__push_commands] )) ||
_dot__push_commands() {
    local commands; commands=()
    _describe -t commands 'dot push commands' commands "$@"
}
(( $+functions[_dot__reset_commands] )) ||
_dot__reset_commands() {
    local commands; commands=()
    _describe -t commands 'dot reset commands' commands "$@"
}
(( $+functions[_dot__rm_commands] )) ||
_dot__rm_commands() {
    local commands; commands=()
    _describe -t commands 'dot rm commands' commands "$@"
}
(( $+functions[_dot__show_commands] )) ||
_dot__show_commands() {
    local commands; commands=()
    _describe -t commands 'dot show commands' commands "$@"
}
(( $+functions[_dot__status_commands] )) ||
_dot__status_commands() {
    local commands; commands=()
    _describe -t commands 'dot status commands' commands "$@"
}

if [ "$funcstack[1]" = "_dot" ]; then
    _dot "$@"
else
    compdef _dot dot
fi
