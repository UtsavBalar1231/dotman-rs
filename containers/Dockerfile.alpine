# Alpine-based static build for dotman
FROM rustlang/rust:nightly-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    musl-dev \
    pkgconfig \
    help2man \
    git \
    file

# Create build directory
WORKDIR /usr/src/app

# Copy manifest files
COPY Cargo.toml Cargo.lock ./

# Copy source code
COPY src ./src

# Copy tests
COPY tests ./tests

# Copy benches
COPY benches ./benches

# Copy README.md
COPY README.md ./README.md

# Build static binary with optimizations
ENV RUSTFLAGS="-C target-feature=+crt-static -C target-cpu=generic -C lto=fat -C panic=abort -C strip=symbols"
RUN cargo build --release --target x86_64-unknown-linux-musl --all-features

# Verify static binary
RUN file target/x86_64-unknown-linux-musl/release/dot
RUN ./target/x86_64-unknown-linux-musl/release/dot --version

# Runtime stage - minimal scratch image
FROM scratch AS runtime

# Copy certificates for HTTPS
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy static binary
COPY --from=builder /usr/src/app/target/x86_64-unknown-linux-musl/release/dot /usr/local/bin/dot

# Copy documentation
COPY --from=builder /usr/src/app/README.md /usr/share/doc/dotman-rs/

# Create minimal user directories
COPY --from=builder --chown=1000:1000 /tmp /home/app/.dotman
COPY --from=builder --chown=1000:1000 /tmp /home/app/.config

USER 1000:1000
WORKDIR /home/app

ENTRYPOINT ["/usr/local/bin/dot"]
CMD ["--help"]

# Metadata
LABEL org.opencontainers.image.title="dotman"
LABEL org.opencontainers.image.description="High-performance dotfiles manager (static Alpine build)"
LABEL org.opencontainers.image.url="https://github.com/UtsavBalar1231/dotman-rs"
LABEL org.opencontainers.image.source="https://github.com/UtsavBalar1231/dotman-rs"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.authors="UtsavBalar1231 <utsavbalar1231@gmail.com>"
